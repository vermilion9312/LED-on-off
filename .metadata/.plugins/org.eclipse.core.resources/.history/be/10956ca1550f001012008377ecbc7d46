/*
 * behavior_tree.c
 *
 *  Created on: Apr 2, 2025
 *      Author: LeeJooHo
 */


#include "behavior_tree.h"

static NodeState run_sequence(void* this)
{
	CompositeNode* node = (CompositeNode*)this;
	for (size_t i = 0; i < node->count; ++i)
	{
		Tick tick = ((LeafNode*)node->children[i])->tick;
		if (tick(node->children[i]) == NODE_FAILURE)
			return NODE_FAILURE;
	}
	return NODE_SUCCESS;
}

static NodeState run_selector(void* this)
{
	CompositeNode* node = (CompositeNode*)this;
	for (size_t i = 0; i < node->count; ++i)
	{
		Tick tick = ((LeafNode*)node->children[i])->tick;
		if (tick(node->children[i]) == NODE_SUCCESS)
			return NODE_SUCCESS;
	}
	return NODE_FAILURE;
}

static GPIO_Config button_1_config = { .GPIO};

static LeafNode button_condition  = { is_button_pressed };
static LeafNode led_off_action    = { turn_off_led      };
static LeafNode led_on_action     = { turn_on_led       };

static void* sequence_children[] = { &button_condition, &led_on_action };
static CompositeNode sequence = { run_sequence, sequence_children, 2 };

static void* selector_children[] = { &sequence, &led_off_action };
static CompositeNode root = { run_selector, selector_children, 2 };


CompositeNode* get_root(void)
{
	return &root;
}


